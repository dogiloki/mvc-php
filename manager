<?php

spl_autoload_register(function($clase){
	$path=str_replace("\\","/",$clase).".php";
	if(file_exists($path)){
		require_once($path);
	}
});

require "vendor/autoload.php";
require_once("libs/helpers.php");
use libs\Config;
use libs\Console\Manager;

Manager::command("new {type} {name}",function($console,$type,$name){
	$types=[
		"controller"=>[
			"filesystem"=>"controllers.path",
			"message"=>"Controlador",
			"template"=>"Controller.txt"
		],
		"model"=>[
			"filesystem"=>"models.path",
			"message"=>"Modelo",
			"template"=>"Model.txt"
		],
		"migration"=>[
			"filesystem"=>"database.migrations",
			"message"=>"Migraci칩n",
			"template"=>"Migration.txt"
		],
		"middleware"=>[
			"filesystem"=>"middlewares.path",
			"message"=>"Middleware",
			"template"=>"Middleware.txt"
		]
	];
	if(!isset($types[$type])){
		$console->error("No existe el par치metro ".$type)->exit();
	}
	$date=date("Y_m_d_His");
	if($type=="migration"){
		$name=$date."_".$name;
	}
	$path=Config::filesystem($types[$type]["filesystem"])."/".$name;
	$name=basename($path);
	$path.=".php";
	$dirname=dirname($path);
	if(file_exists($path)){
		$console->error("El ".$types[$type]["message"]." ".$path." ya existe")->exit();
	}
	if(!file_exists($dirname)){
		mkdir($dirname,0755,true);
	}
	$space=str_replace("/","\\",$dirname);
	$file=fopen($path,"w+b");
	if(!$file){
		$console->error("No se tiene acceso al archivo ".$path)->exit();
	}
	fwrite($file,messageFormat(file_get_contents("libs/Template/".$types[$type]["template"]),compact("name","space")));
	fclose($file);
	$console->success($types[$type]["message"]." creado ".$path)->exit();
})->describe("Crear un nuevo archivo en base a una plantilla, ubicada en libs/Template");

Manager::command("create",function($console){
	$folders=Config::filesystem('create.folders');
	$files=Config::filesystem('create.files');
	foreach($folders as $dir){
		if(!file_exists($dir)){
			mkdir($dir,0777,true);
			$console->success("Se cre칩 el directorio ".$dir);
		}
	}
	foreach($files as $file){
		if(!file_exists($file['path'])){
			file_put_contents($file['path'],$file['content']);
			$console->success("Se cre칩 el archivo ".$file['path']);
		}
	}
})->describe("Crear carpetas y archivos iniciales para el framework");

Manager::command("migrate {type?}",function($console,$type){
	$type??="up";
	$type=$type=="rollback"?'down':'up';
	$migrate=new libs\DB\Migrate();
	$migrate->init();
	$migrate->migrate($type);
});

Manager::command("seeder",function($console){
	$seeder=new database\seeders\DatabaseSeeder();
	$seeder->run();
});

Manager::command("server {port?}",function($console,$port){
	$port??=8000;
	//exec('php -S 127.0.0.1:'.$port.' -t public');v
	exec('php -S 127.0.0.1:'.$port." ".Config::filesystem('public.path')."/index.php");
});

Manager::call($argv);

?>